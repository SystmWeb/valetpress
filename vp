#!/bin/bash
#############################
# ValetPress - 2018.08.02.1 #
#############################

# Added for debugging
set -euo pipefail
IFS=$'\n\t'

# Core WordPress install function
wordpress_installer () {
	wp core config --dbname="$project_name" --dbuser=root --dbhost=127.0.0.1 --extra-php <<PHP
define( 'WP_DEBUG', false );
define( 'WP_DEBUG_LOG', false );
define( 'FS_METHOD', 'direct' );
define( 'WP_SITEURL', 'http://$project_name.$valet_domain/' );
define( 'WP_HOME', 'http://$project_name.$valet_domain/' );
PHP
	wp db create
	wp core install --url="$project_name"."$valet_domain" --title="$project_name"."$valet_domain" --admin_user="$wp_admin_user" --admin_password="$wp_admin_password" --admin_email="$wp_admin_email"
	cd "$sites_folder"/"$project_name"/
}

# Output WordPress login info
wordpress_login_info () {
	echo "Project Created: http://$project_name.$valet_domain/"
	echo "Login: http://$project_name.$valet_domain/wp-login.php"
	echo "Username: $wp_admin_user"
	echo "Password: $wp_admin_password"
	if [ "$open_browser" = 1 ]; then
		open -a "$browser" -g http://$project_name.$valet_domain/wp-login.php
	fi
}

# Get ValetPress install directory
vp_path="$(cd "$(dirname "$0")" && pwd)"

# Get config variables
wp_admin_user=$(cat $vp_path/config.json|jq -r .wp_admin_user)
wp_admin_email=$(cat $vp_path/config.json|jq -r .wp_admin_email)
wp_admin_password=$(cat $vp_path/config.json|jq -r .wp_admin_password)
sites_folder=$(cat $vp_path/config.json|jq -r .sites_folder)
open_browser=$(cat $vp_path/config.json|jq -r .open_browser)
browser=$(cat $vp_path/config.json|jq -r .browser)
valet_domain=$(cat $vp_path/config.json|jq -r .valet_domain)

# ValetPress Commands
if [ $# -lt 1 ] || [ "$1" = "help" ] || [ -z "$1" ];then
	clear
	echo "ValetPress Commands:"
	echo " vp create - Create fresh WordPress install. "
	echo " vp delete - Delete an existing WordPress project. "
	echo " vp help   - Display ValetPress help screen. "
	exit 1;
else
	# ValetPress create option
	if [ "$1" = "create" ]; then
		echo "ValetPress, create new site "
		echo "Project Name:"
		read -r project_name
		cd "$sites_folder"

		# Delete existing project if detected
		if [ -d "$project_name" ]; then
			cd "$project_name"
			wp db drop --yes
			cd ..
			rm -rf "$project_name"
			echo "Previous Project Deleted: $project_name"
		fi

		# Create new project folder
		mkdir "$project_name"
		cd "$project_name"

		# Select install method
		echo " How do you wish to install WordPress? "
		echo " 1.) Default WordPress Install "
		echo " 2.) WordPress with specific theme "
		read -r create_choice

			# Default WordPress Install
			if [ "$create_choice" = 1 ]; then
				wp core download
				wordpress_installer
				cp -R $vp_path/plugins/ $sites_folder/$project_name/wp-content/plugins/
				wp plugin activate --all
				wordpress_login_info
			fi
			
			# WordPress install with specific theme
			if [ "$create_choice" = 2 ]; then
				echo "Theme Location eg ~/Downloads/theme.zip "
				read -r theme_location
				wp core download --skip-content
				mkdir $sites_folder/"$project_name"/wp-content/plugins/
				wordpress_installer
				wp theme install $theme_location --activate
				cp -R $vp_path/plugins/ $sites_folder/$project_name/wp-content/plugins/
				wp plugin activate --all
				WP_ADMIN=true wp tgmpa-plugin install --all
				wordpress_login_info
			fi	
	fi

	# ValetPress delete option
	if [ "$1" = "delete" ]; then
		if [ "$(ls -A "$sites_folder")" ]; then
			cd "$sites_folder"
			echo "ValetPress, delete a project "
			ls -d */ | cut -f1 -d'/'
			echo "Project Name:"
			read -r project_name
			echo "Are you sure you want to delete $project_name ? (y/N)"
			read -r delete_confirm
			delete_confirm_converted=$( echo "$delete_confirm" | tr "[:upper:]" "[:lower:]" )

			if [ "$delete_confirm_converted" = "y" ]; then
				cd "$project_name"
				wp db drop --yes
				cd ..
				rm -rf "$project_name"
				echo "Sucess: $project_name deleted"
			fi	 
		else
			echo "No WordPress installs detected. "
		fi
	fi
fi